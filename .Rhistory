pie.subtitle(text='by Type') %>%
pie.footer(text=texto,
location = 'bottom-left') %>%
pie.tooltips()
advanced.pie
data <- data.frame(label = c('Eurobonos','CDs','Bonos','Depositos'),
value = c(0.1,0.2,0.3,0.4),
color = RColorBrewer::brewer.pal(4, 'Spectral'))
simple.pie <- pier(data)
simple.pie
texto<-'Scotia Fondos al 13/12/17'
advanced.pie <- data %>%
pier() %>%
pie.size(inner=70, outer=100) %>%
pie.header(text='Segments', font='Impact', location='pie-center') %>%
pie.subtitle(text='by Type') %>%
pie.footer(text=texto,
location = 'bottom-left') %>%
pie.tooltips()
advanced.pie
simple.pie
runApp('D:/onedrive/R Scritps/reporte LTV/Shiny_SemiCollapsibleSidebar-master')
library(shiny)
library(leaflet) # devtools::install_github('rstudio/leaflet')
library(shiny)
library(leaflet) # devtools::install_github('rstudio/leaflet')
library(highcharter) # devtools::install_github('jbkunst/highcharter')
library(plotly) # devtools::install_github('ropensci/plotly')
library(ggplot2) # devtools::install_github('hadley/ggplot2')
library(sp)
library(dplyr)
library(flexdashboard) # devtools::install_github('rstudio/flexdashboard')
library(rgeos)
library(mapproj)
library(maptools)
library(readr)
library(ggthemes)
devtools::install_github('rstudio/leaflet')
devtools::install_github('jbkunst/highcharter')
runApp('D:/onedrive/R Scritps/reporte LTV/Shiny_SemiCollapsibleSidebar-master')
runApp('D:/onedrive/R Scritps/reporte LTV/ga-dashboard-demo-master')
install.packages("d3heatmap")
runApp('D:/onedrive/R Scritps/reporte LTV/ga-dashboard-demo-master')
runApp('D:/onedrive/R Scritps/reporte LTV/ga-dashboard-demo-master')
## functions.R
library(rga)
library(dygraphs)
library(zoo)
library(tidyr)
library(lubridate)
library(d3heatmap)
library(dplyr)
library(stringr)
library(DT)
library(RMySQL)
library(CausalImpact)
library(AnomalyDetection)
library(ggplot2)
install.packages("rga")
install.packages("RGA")
source('D:/onedrive/R Scritps/reporte LTV/ga-dashboard-demo-master/functions.R')
library(devtools)
install_github("rga", "skardhamar")
library(rga)
## functions.R
library(rga)
library(dygraphs)
library(zoo)
library(tidyr)
library(lubridate)
library(d3heatmap)
library(dplyr)
library(stringr)
library(DT)
library(RMySQL)
install.packages("RMySQL")
library(dplyr)
library(stringr)
library(DT)
library(RMySQL)
library(CausalImpact)
install.packages("RMySQL")
install.packages("CausalImpact")
# I have the below in a file I source that is not on github
message("functions.R called from ", getwd())
source('D:/onedrive/R Scritps/reporte LTV/ga-dashboard-demo-master/functions.R')
runApp('D:/onedrive/R Scritps/reporte LTV/ga-dashboard-demo-master')
runApp('D:/onedrive/R Scritps/reporte LTV/ga-dashboard-demo-master')
runApp('D:/onedrive/R Scritps/reporte LTV/Shiny_SemiCollapsibleSidebar-master')
shiny::runApp('D:/onedrive/R Scritps/reporte LTV/Shiny_SemiCollapsibleSidebar-master')
runApp('D:/onedrive/R Scritps/reporte LTV/Shiny_SemiCollapsibleSidebar-master')
runApp('D:/onedrive/R Scritps/reporte LTV/ejm 1')
runApp('D:/onedrive/R Scritps/reporte LTV/ejm 1')
install.packages("yaml")
runApp('D:/onedrive/R Scritps/reporte LTV/ejm 1')
runApp('D:/onedrive/R Scritps/reporte LTV/ejm 1')
ui <- dashboardPage(
dashboardHeader(title = 'Test'),
# sidebar
dashboardSidebar(
sidebarMenu(id='sidebarmenu',
menuItem('Menu One', tabName = 'menuOne',
menuSubItem('Sub-Item One', tabName = 'subItemOne'),
menuSubItem('Sub-Item Two', tabName = 'subItemTwo')
),
menuItem('Menu Two', tabName = 'menuTwo',
menuSubItem('Sub-Item Three', tabName = 'subItemThree'),
menuSubItem('Sub-Item Four', tabName = 'subItemFour')
)
)
),
# body
dashboardBody(
absolutePanel(id = "parinbox", top = 80, right = 0, width = 300,
box(id = "parbox",
dateRangeInput('dateRange', 'time:', start = Sys.Date() - 7, end = Sys.Date() - 1),
conditionalPanel("input.sidebarmenu == 'subItemOne' || input.sidebarmenu == 'subItemFour'",
textInput("compyear", "compyear:")
),
conditionalPanel("input.sidebarmenu=='subItemThree'",
selectInput(inputId = "selmets", "item:", c("a","b","c"), c("a","b"), TRUE)
),
fluidRow(column(4, offset = 1, actionButton(inputId = "run", "run")))
)
),
uiOutput("title"),
plotOutput("plt")
)
)
source('~/.active-rstudio-document')
install.packages("rlang")
source('~/.active-rstudio-document')
library(shiny)
library(shinydashboard)
library(rmarkdown)
library(ggplot2)
ui <- dashboardPage(
dashboardHeader(title = 'Test'),
# sidebar
dashboardSidebar(
sidebarMenu(id='sidebarmenu',
menuItem('Menu One', tabName = 'menuOne',
menuSubItem('Sub-Item One', tabName = 'subItemOne'),
menuSubItem('Sub-Item Two', tabName = 'subItemTwo')
),
menuItem('Menu Two', tabName = 'menuTwo',
menuSubItem('Sub-Item Three', tabName = 'subItemThree'),
menuSubItem('Sub-Item Four', tabName = 'subItemFour')
)
)
),
# body
dashboardBody(
absolutePanel(id = "parinbox", top = 80, right = 0, width = 300,
box(id = "parbox",
dateRangeInput('dateRange', 'time:', start = Sys.Date() - 7, end = Sys.Date() - 1),
conditionalPanel("input.sidebarmenu == 'subItemOne' || input.sidebarmenu == 'subItemFour'",
textInput("compyear", "compyear:")
),
conditionalPanel("input.sidebarmenu=='subItemThree'",
selectInput(inputId = "selmets", "item:", c("a","b","c"), c("a","b"), TRUE)
),
fluidRow(column(4, offset = 1, actionButton(inputId = "run", "run")))
)
),
uiOutput("title"),
plotOutput("plt")
)
)
server <- function(input, output, session) {
output$plt <- renderPlot({
req(input$run)
switch (input$sidebarmenu,
subItemOne = plot(cars),
subItemTwo = plot(pressure),
subItemThree = plot(faithful),
subItemFour = plot(women)
)
})
output$title <- renderUI({
req(input$run)
h2(paste('Selected', input$sidebarmenu))
})
}
shinyApp(ui, server)
library(shiny)
library(shinydashboard)
ui <- dashboardPage(
dashboardHeader(),
dashboardSidebar(
sidebarMenu(
menuItem("Dashboard", tabName = "dashboard", icon = icon("dashboard")),
menuItem("Widgets", icon = icon("th"), tabName = "widgets"),
menuItem("Charts", icon = icon("bar-chart-o"), startExpanded = TRUE,
menuSubItem("Sub-item 1", tabName = "subitem1"),
menuSubItem("Sub-item 2", tabName = "subitem2")
)
),
textOutput("res")
),
dashboardBody(
tabItems(
tabItem("dashboard", "Dashboard tab content"),
tabItem("widgets", "Widgets tab content"),
tabItem("subitem1", "Sub-item 1 tab content"),
tabItem("subitem2", "Sub-item 2 tab content")
)
)
)
server <- function(input, output, session) {
output$res <- renderText({
req(input$sidebarItemExpanded)
paste("Expanded menuItem:", input$sidebarItemExpanded)
})
}
shinyApp(ui, server)
?tabItem
?menuSubItem
source('~/.active-rstudio-document')
?tabItem
library(shiny)
library(shinydashboard)
ui <- dashboardPage(
dashboardHeader(),
dashboardSidebar(
sidebarMenu(
menuItem("Dashboard", tabName = "dashboard", icon = icon("dashboard")),
menuItem("Widgets", icon = icon("th"), tabName = "widgets"),
menuItem("Charts", icon = icon("bar-chart-o"), startExpanded = TRUE,
menuSubItem("Sub-item 1", tabName = "subitem1"),
menuSubItem("Sub-item 2", tabName = "subitem2")
)
),
textOutput("res")
),
dashboardBody(
tabItems(
tabItem("dashboard", "Dashboard tab content"),
tabItem("widgets", "Widgets tab content"),
tabItem("subitem1", "Sub-item 1 tab content"),
tabItem("subitem2", "Sub-item 2 tab content")
)
)
)
server <- function(input, output, session) {
output$res <- renderText({
req(input$sidebarItemExpanded)
paste("Expanded menuItem:", input$sidebarItemExpanded)
})
}
shinyApp(ui, server)
runApp('D:/onedrive/R Scritps/reporte LTV/Shiny_SemiCollapsibleSidebar-master')
runApp('D:/onedrive/R Scritps/reporte LTV/Shiny_SemiCollapsibleSidebar-master')
runApp('D:/onedrive/R Scritps/reporte LTV/Shiny_SemiCollapsibleSidebar-master')
runApp('D:/onedrive/R Scritps/reporte LTV/Shiny_SemiCollapsibleSidebar-master')
runApp('D:/onedrive/R Scritps/reporte LTV/Shiny_SemiCollapsibleSidebar-master')
runApp('D:/onedrive/R Scritps/reporte LTV/Nueva carpeta/Shiny_SemiCollapsibleSidebar-master')
runApp('D:/onedrive/R Scritps/reporte LTV/Shiny_SemiCollapsibleSidebar-master')
shiny::runApp('D:/onedrive/R Scritps/reporte LTV/Nueva carpeta/Shiny_SemiCollapsibleSidebar-master')
runApp('D:/onedrive/R Scritps/reporte LTV/Shiny_SemiCollapsibleSidebar-master')
runApp('D:/onedrive/R Scritps/reporte LTV')
runApp('D:/onedrive/R Scritps/reporte LTV')
runApp('D:/onedrive/R Scritps/reporte LTV')
install.packages("googleVis")
knitr::opts_chunk$set(echo = TRUE)
library(XML)
eq <- read.csv("http://earthquake.usgs.gov/earthquakes/feed/v0.1/summary/2.5_week.csv")
install.packages(c("devtools","jsonlite", "knitr", "shiny", "httpuv"))
install.packages(c("devtools", "jsonlite", "knitr", "shiny", "httpuv"))
install.packages("httpuv")
install.packages("yaml")
shiny::runApp('D:/downloads/Shiny-Boxplot-Application-master')
install.packages("tibble")
runApp('D:/downloads/Shiny-Boxplot-Application-master')
runApp('D:/onedrive/Documentos/usb 2018/Github2/radiant-master/radiant-master/inst/marketing')
install.packages("stringi")
runApp('D:/onedrive/Documentos/usb 2018/Github2/radiant-master/radiant-master/inst/marketing')
runApp('D:/onedrive/best/INEI APP2')
runApp('D:/onedrive/best/INEI APP2')
?collapsible
?collapsable
library(shiny)
?collapsable
??collapsable
runApp('D:/onedrive/best/INEI APP2')
runApp('D:/onedrive/best/INEI APP2')
runApp('D:/onedrive/best/INEI Bruto/ENAHO/ENAHOAPP')
install.packages("glue")
runApp('D:/onedrive/best/INEI Bruto/ENAHO/ENAHOAPP')
?navbarPage
navbarPage("App Title",
tabPanel("Plot"),
tabPanel("Summary"),
tabPanel("Table")
)
navbarPage("App Title",
tabPanel("Plot"),
navbarMenu("More",
tabPanel("Summary"),
"----",
"Section header",
tabPanel("Table")
)
)
runApp('D:/onedrive/best/INEI Bruto/ENAHO/single')
runApp('D:/onedrive/best/INEI Bruto/ENAHO/single')
runApp('D:/downloads/shiny-examples-master/015-layout-navbar')
runApp('D:/downloads/shiny-examples-master/015-layout-sidebar')
runApp('D:/downloads/shiny-examples-master/016-knitr-pdf')
install.packages("backports")
runApp('D:/downloads/shiny-examples-master/016-knitr-pdf')
runApp('D:/downloads/shiny-examples-master/016-knitr-pdf')
runApp('D:/downloads/shiny-examples-master/017-select-vs-selectize')
runApp('D:/downloads/shiny-examples-master/018-datatable-options')
runApp('D:/downloads/shiny-examples-master/033-conditionalpanel-demo')
runApp('D:/downloads/shiny-examples-master/052-navbar-example')
runApp('D:/downloads/shiny-examples-master/053-navlistpanel-example')
runApp('D:/downloads/shiny-examples-master/054-nvd3-line-chart-output')
runApp('D:/downloads/shiny-examples-master/057-plot-plus-three-columns')
runApp('D:/downloads/shiny-examples-master/060-retirement-simulation')
runApp('D:/downloads/shiny-examples-master/064-telephones-by-region')
runApp('D:/downloads/shiny-examples-master/015-layout-navbar')
runApp('D:/downloads/shiny-examples-master/020-knit-html')
runApp('D:/downloads/shiny-examples-master/028-actionbutton-demo')
runApp('D:/downloads/shiny-examples-master/033-conditionalpanel-demo')
runApp('D:/downloads/shiny-examples-master/039-download-file')
runApp('D:/downloads/shiny-examples-master/040-dynamic-clustering')
runApp('D:/downloads/shiny-examples-master/050-kmeans-example')
runApp('D:/downloads/shiny-examples-master/051-movie-explorer')
install.packages("ggvis")
runApp('D:/downloads/shiny-examples-master/051-movie-explorer')
install.packages("INSTlibrary")
runApp('D:/downloads/shiny-examples-master/051-movie-explorer')
runApp('D:/downloads/shiny-examples-master/051-movie-explorer')
runApp('D:/downloads/shiny-examples-master/052-navbar-example')
runApp('D:/downloads/shiny-examples-master/052-navbar-example')
runApp('D:/downloads/shiny-examples-master/052-navbar-example')
runApp('D:/downloads/shiny-examples-master/052-navbar-example')
library(shinythemes)
install.packages("shinythemes")
runApp('D:/downloads/shiny-examples-master/052-navbar-example')
runApp('D:/downloads/shiny-examples-master/052-navbar-example')
runApp('D:/onedrive/best/INEI Bruto/ENAHO/ENAHOAPP2')
runApp('D:/onedrive/best/INEI Bruto/ENAHO/ENAHOAPP2')
runApp('D:/onedrive/best/INEI Bruto/ENAHO/ENAHOAPP2')
library("shapefiles")
install.packages("shapefiles")
library(shapefiles)
shapefile <- read.shapefile("links")
shiny::runApp('D:/downloads/shiny-intro-master/01_faithful')
runApp('D:/downloads/shiny-intro-master/05_quakes_dashboard')
if (!require(devtools)) {
install.packages("devtools")
}
devtools::install_github('diegovalle/mxmaps')
library(mxmaps)
data("df_mxstate")
df_mxstate$value <- df_mxstate$pop
mxstate_choropleth(df_mxstate,
title = "Total population, by state")
df_mxstate
View(df_mxstate)
data("df_mxstate")
str(df_mxstate)
?mxstate_choropleth
library(leaflet)
leaflet(world) %>%
addTiles() %>%
addPolygons(color = "#444444", weight = 1, fillOpacity = 0.5,
fillColor = ~colorQuantile("YlOrRd", lifeExp)(lifeExp),
popup = paste(round(world$lifeExp, 2)))
devtools::install_github("ropenscilabs/eechidna",
build_vignettes = TRUE)
library(eechidna)
devtools::install_github("ropenscilabs/eechidna",
build_vignettes = TRUE)
devtools::install_github("ropenscilabs/eechidna",
build_vignettes = TRUE)
install.packages("rgdal")
install.packages("rgdal")
devtools::install_github("ropenscilabs/eechidna",
build_vignettes = TRUE)
library(dplyr)
install.packages("dplyr")
devtools::install_github("ropenscilabs/eechidna",
build_vignettes = TRUE)
install.packages("httpuv")
install.packages("httpuv")
devtools::install_github("ropenscilabs/eechidna",
build_vignettes = TRUE)
install.packages("purrrlyr")
devtools::install_github("ropenscilabs/eechidna",
build_vignettes = TRUE)
install.packages("GGally")
devtools::install_github("ropenscilabs/eechidna",
build_vignettes = TRUE)
install.packages()
install.packages("corrplot")
library(devtools)
install_github("GuangchuangYu/hexSticker")
library(hexSticker)
sticker(expression(plot(cars, cex=.5, cex.axis=.5, mgp=c(0,.3,0), xlab="", ylab="")),
package="hexSticker", p_size=8, s_x=1, s_y=.8, s_width=1.2, s_height=1,
filename="inst/figures/baseplot.png")
library(hexSticker)
library(lattice)
counts <- c(18,17,15,20,10,20,25,13,12)
outcome <- gl(3,1,9)
treatment <- gl(3,3)
bwplot <- bwplot(counts ~ outcome | treatment, xlab=NULL, ylab=NULL, cex=.5,
scales=list(cex=.5), par.strip.text=list(cex=.5))
sticker(bwplot, package="hexSticker", p_size=8, s_x=1.05, s_y=.75, s_width=2, s_height=1.5,
h_fill="#f9690e", h_color="#f39c12", filename="inst/figures/lattice.png")
sticker
sticker(expression(plot(cars, cex=.5, cex.axis=.5, mgp=c(0,.3,0), xlab="", ylab="")),
package="hexSticker", p_size=8, s_x=1, s_y=.8, s_width=1.2, s_height=1,
filename="sticker1.png")
sticker(expression(plot(cars, cex=.5, cex.axis=.5, mgp=c(0,.3,0), xlab="", ylab="")),
package="SBSR", p_size=8, s_x=1, s_y=.8, s_width=1.2, s_height=1,
filename="sticker1.png")
sticker(expression(plot(cars, cex=.5, cex.axis=.5, mgp=c(0,.3,0), xlab="", ylab="")),
package="SBSR", p_size=8, s_x=1, s_y=.8, s_width=1.2, s_height=1,
filename="sticker1.png")
sticker(expression(plot(cars, cex=.5, cex.axis=.5, mgp=c(0,.3,0), xlab="", ylab="")),
package="hexSticker", p_size=8, s_x=1, s_y=.8, s_width=1.2, s_height=1,
filename="sticker1.png")
library(lattice)
counts <- c(18,17,15,20,10,20,25,13,12)
outcome <- gl(3,1,9)
treatment <- gl(3,3)
bwplot <- bwplot(counts ~ outcome | treatment, xlab=NULL, ylab=NULL, cex=.5,
scales=list(cex=.5), par.strip.text=list(cex=.5))
sticker(bwplot, package="hexSticker", p_size=8, s_x=1.05, s_y=.75, s_width=2, s_height=1.5,
h_fill="#f9690e", h_color="#f39c12", filename="lattice.png")
?sticker
sticker(bwplot, package="hexSticker", p_size=15, s_x=1.05, s_y=.75, s_width=2, s_height=1.5,
h_fill="#f9690e", h_color="#f39c12", filename="lattice2.png")
sticker(bwplot, package="INEIR", p_size=15, s_x=1.05, s_y=.75, s_width=2, s_height=1.5,
h_fill="#f9690e", h_color="#f39c12", filename="lattice2.png")
sticker(bwplot, package="INEIR", p_size=25, s_x=1.05, s_y=.75, s_width=2, s_height=1.5,
h_fill="#f9690e", h_color="#f39c12", filename="lattice2.png")
sticker(bwplot, package="INEIR", p_size=25, s_x=1.05, s_y=.75, s_width=2, s_height=1.5,
h_fill="#f9690e", h_color="#f39c12", filename="lattice2.png")
sticker(bwplot, package="INEIR", p_size=25, s_x=1.05, s_y=.75, s_width=2, s_height=1.5,
h_fill="#f9690e", h_color="#f39c12",url="BEST", filename="lattice2.png")
sticker(bwplot, package="INEIR", p_size=25, s_x=1.05, s_y=.75, s_width=2, s_height=1.5,
h_fill="#f9690e", h_color="#f39c12",url="BEST", filename="lattice2.png")
sticker(bwplot, package="INEIR", p_size=25, s_x=1.05, s_y=.75, s_width=2, s_height=1.5,
h_fill="#f9690e", h_color="#f39c12",url="BEST",u_size=10, filename="lattice2.png")
sticker(bwplot, package="INEIR", p_size=25, s_x=1.05, s_y=.75, s_width=2, s_height=1.5,
h_fill="#f9690e", h_color="#f39c12",url="http://besteamperu.org",u_size=10, filename="lattice3.png")
sticker(bwplot, package="INEIR", p_size=25, s_x=1.05, s_y=.75, s_width=2, s_height=1.5,
h_fill="#f9690e", h_color="#f39c12",url="http://besteamperu.org",u_size=8, filename="lattice3.png")
sticker(bwplot, package="INEIR", p_size=25, s_x=1.05, s_y=.75, s_width=2, s_height=1.5,
h_fill="#f9690e", h_color="#f39c12",url="http://besteamperu.org",u_size=8, filename="lattice3.png")
sticker(bwplot, package="INEIR", p_size=25, s_x=1.05, s_y=.75, s_width=2, s_height=1.5,
h_fill="#f9690e", h_color="#f39c12",url="http://besteamperu.org",u_size=6, filename="lattice3.png")
imgurl <- "https://es.wikipedia.org/wiki/Instituto_Nacional_de_Estad%C3%ADstica_e_Inform%C3%A1tica#/media/File:INEI.svg"
sticker(imgurl, package="hexSticker", p_size=8, s_x=1, s_y=.75, s_width=.6,
filename="inst/figures/imgfile.png")
sticker(imgurl, package="hexSticker", p_size=8, s_x=1, s_y=.75, s_width=.6,
filename="imgfile.png")
imgurl <- "https://www.r-project.org/logo/Rlogo.png"
sticker(imgurl, package="hexSticker", p_size=8, s_x=1, s_y=.75, s_width=.6,
filename="imgfile.png")
getwd
getwd()
sticker(imgurl, package="INEIR", p_size=25, s_x=1.05, s_y=.75, s_width=2, s_height=1.5,
h_fill="#f9690e", h_color="#f39c12",url="http://besteamperu.org",u_size=6, filename="lattice3.png")
sticker(imgurl, package="INEIR", p_size=25, s_x=1.05, s_y=.75, s_width=2, s_height=1.5,
h_fill="#f9690e", h_color="#f39c12",url="http://besteamperu.org",u_size=6, filename="INEIR1.png")
sticker(imgurl, package="INEIR", p_size=25, s_x=1.05, s_y=.75, s_width=2, s_height=1.5,
h_fill="#f9690e", h_color="#f39c12",url="http://besteamperu.org",u_size=6, filename="INEIR1.png")
?sticker
sticker(imgurl, package="INEIR", p_size=25, s_x=1.05, s_y=.75, s_width=0.2, s_height=0.5,
h_fill="#f9690e", h_color="#f39c12",url="http://besteamperu.org",u_size=6, filename="INEIR1.png")
sticker(imgurl, package="INEIR", p_size=25, s_x=1.05, s_y=.75, s_width=0.4, s_height=1,
h_fill="#f9690e", h_color="#f39c12",url="http://besteamperu.org",u_size=6, filename="INEIR1.png")
sticker(imgurl, package="INEIR", p_size=25, s_x=1.05, s_y=.75, s_width=0.4, s_height=1,
h_fill="#f9690e", h_color="#00FF00",url="http://besteamperu.org",u_size=6, filename="INEIR1.png")
sticker(imgurl, package="INEIR", p_size=25, s_x=1.05, s_y=.75, s_width=0.4, s_height=1,
h_fill="#00FF00", h_color="#f39c12",url="http://besteamperu.org",u_size=6, filename="INEIR1.png")
sticker(imgurl, package="INEIR", p_size=25, s_x=1.05, s_y=.75, s_width=0.4, s_height=1,
h_fill="#228B22", h_color="#f39c12",url="http://besteamperu.org",u_size=6, filename="INEIR1.png")
devtools::install_github("RamiKrispin/MLstudio")
runML()
library(MLstudio)
runML()
library(INEI)
library(ggmap)
egy.map <- get_map(location=c(lon=30, lat=26), zoom=6, maptype="terrain", filename="~/Desktop/ggmapTemp")
?get_map
library(devtools)
install_github("BESTDATASCIENCE/pemaps")
library(pemaps)
data("departamental")
data("departamental")
plot(departamental)
data("distritos")
plot(distritos)
library(devtools)
remove.packages("pemaps", lib="~/R/win-library/3.4")
library(devtools)
install_github("BESTDATASCIENCE/pemaps")
library(pemaps)
data("distritos")
plot(distritos)
data("provincias")
library(devtools)
setwd("D:/onedrive/best/paquetes/pemaps/R")
setwd("D:/onedrive/best/paquetes/pemaps/")
roxygen2::roxygenise()
